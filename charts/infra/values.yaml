# Default configurations
# Ref: https://github.com/infrahq/helm-charts/charts/infra

nameOverride: ""
fullnameOverride: ""

## Additional connector configurations
config:

  ## Connector container service ports
  addr:
    http: 8080
    https: 8443
    metrics: 9090

  ## Server access key
  ## If omitted, `accessKeySecret` must be set to an existing Kubernetes secret containing an `access-key` item
  accessKey: ""

  ## Existing server access key secret
  ## If omitted, `accessKey` must be set to the server access key
  accessKeySecret: ""

  ## Connector destination name
  ## If omitted, the connector will try to discover the cluster name. If a cluster name
  ## cannot be discovered, it will use the cluster unique identifier
  name: ""

  ## Server connection configurations
  server:

    ## Server URL
    url: "api.infrahq.com"

    ## PEM encoded CA certificate of the server
    trustedCertificate: ""

  ## Path to CA and private key
  caCert: /var/run/secrets/infrahq.com/certificate-authority/ca.crt
  caKey: /var/run/secrets/infrahq.com/certificate-authority/ca.key

## Number of connector pods to run
## No effect unless `autoscaling.enabled` is `false`
replicas: 1

## Create default cluster roles to assign with Infra
defaultRoles:
  create: true
  roles:
    exec: true
    logs: true
    portForward: true

## Image configurations
image:

  ## The image repository to use for the connector deployment
  repository: infrahq/infra

  ## The image tag to use instead of the default {{ .Chart.AppVersion }}
  tag: ""

  ## The pull policy to use when pulling (downloading) the connector image
  ## Ref: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  pullPolicy: IfNotPresent

## One or more Secret to use when pulling the connector image
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
  # - name: "image-pull-secret"

## Additional labels to apply to all resources
## Global values will be merged into local values
labels: {}

## Environment variables to pass to the connector container
env: []
  # - name: "INFRA_LOG_LEVEL"
  #   value: "info"

## ConfigMap or Secret references containing environment variables to pass to the connector container
## Ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
envFrom: []
  # - configMapRef:
  #     name: configmap-name
  # - secretRef:
  #     name: secret-name

## Service account configurations
serviceAccount:

  ## Create the service account
  create: true

  ## Name of the service account to use instead of the default templated fullname
  name: ""

  ## Annotations to apply to the service account
  annotations: {}

  ## Automount service account API credentials
  automountServiceAccountToken: true

## Labels to apply to the connector pod
podLabels: {}

## Annotations to apply to the connector pod
podAnnotations: {}

## Security context for the connector pod
podSecurityContext:
  fsGroup: 2000

## Security context for the connector container
securityContext:
  runAsNonRoot: true
  runAsUser: 999
  runAsGroup: 999
  readOnlyRootFilesystem: true

## Liveness probe for the default backend
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
livenessProbe:

  ## Minimum number of consecutive successes before the probe is considered successful
  successThreshold: 1

  ## Minimum number of consecutive failures before the probe is considered failed
  failureThreshold: 3

  ## Seconds after container starts before the probe is initialized
  initialDelaySeconds: 10

  ## Seconds between consecutive probes
  periodSeconds: 10

  ## Seconds before the probe times out
  timeoutSeconds: 1

## Readiness probe for the default backend
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
readinessProbe:

  ## Minimum number of consecutive successes before the probe is considered successful
  successThreshold: 1

  ## Minimum number of consecutive failures before the probe is considered failed
  failureThreshold: 3

  ## Seconds after container starts before the probe is initialized
  initialDelaySeconds: 10

  ## Seconds between consecutive probes
  periodSeconds: 10

  ## Seconds before the probe times out
  timeoutSeconds: 1

## Additional volumes to attach to the connector pod
volumes: []
  # - name: configmap-volume
  #   configMap:
  #     name: configmap-name
  # - name: secret-volume
  #   secret:
  #     secretName: secret-name

## Additional volume mounts to attach to the connector container
volumeMounts: []
  # - name: configmap-volume
  #   mountPath: /mnt/configmap
  # - name: secret-volume
  #   mountPath: /mnt/secret
  #   readOnly: true

## Service configurations
service:

  ## Service type
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: LoadBalancer

  ## Service labels
  labels: {}

  ## Service annotations
  annotations: {}

  ## HTTP service port
  port: 80

  ## HTTP service port name
  portName: http

  ## HTTP service node port
  ## No effect unless `connector.service.type` is `NodePort`
  nodePort: 30080

  ## HTTPS service port
  securePort: 443

  ## HTTPS service port name
  securePortName: https

  ## HTTPS service node port
  ## No effect unless `connector.service.type` is `NodePort`
  secureNodePort: 30443

  ## IP of the load balancer to create
  ## No effect unless `connector.service.type` is `LoadBalancer`
  loadBalancerIP: ""

  ## Source IP ranges that can access the service
  loadBalancerSourceRanges: []

  ## External IPs that can be used to access the service
  externalIPs: []

  ## Control how traffic from external sources are routed
  ## Supports `Cluster` or `Local`
  externalTrafficPolicy: ""

  ## Control session-based routing of client connections
  ## Supports `ClientIP` or `None`
  sessionAffinity: ""

## Optionally route using an existing ingress controller.
## service.type should be "ClusterIP" if ingress.enabled is true
ingress:
  enabled: false
  ingressClassName: nginx
  annotations: {}
    # kubernetes.io/tls-acme: "true"

  hosts:
    - host: ""
      path: /
      pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Metrics configurations
metrics:

  ## Enable connector metrics
  enabled: false

  ## Metrics service configurations
  service:
    ## Metrics service labels
    labels: {}

    ## Metrics service annotations
    annotations: {}

    ## Metrics service port
    port: 9090

    ## Metrics service port name
    portName: metrics

  ## Service monitor configurations
  serviceMonitor:

    ## Enable service monitor
    enabled: false

    ## Service monitor labels
    labels: {}

    ## Service monitor annotations
    annotations: {}

    ## Service monitor scrape interval
    interval: 30s

    ## Prometheus relabel configs to apply to samples before scraping
    relabelings: []

    ## Prometheus metric relabel configs to apply to samples before ingesting
    metricRelabelings: []

## Resource requests and limits for the connector pod
resources: {}
  # requests:
  #   cpu: 250m
  #   memory: 256Mi
  # limits:
  #   cpu: 500m
  #   memory: 512Mi

## Autoscaling configurations
autoscaling:

  ## Enable connector autoscaling
  enabled: false

  ## Minimum number of connector pods to run
  minReplicas: 1

  ## Maximum number of connector pods to run
  maxReplicas: 3

  ## Target average CPU utilization percentage
  # targetCPUUtilizationPercentage: 50

  ## Target average memory utilization percentage
  # targetMemoryUtilizationPercentage: 50

## Node selector configurations
nodeSelector: {}

## Tolerations configurations
tolerations: []

## Affinity configurations
affinity: {}
